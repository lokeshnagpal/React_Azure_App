trigger:
  branches:
    include:
      - main
      - develop

pool:
  name: 'Default'  # This uses your self-hosted agent pool
  demands: agent.os -equals Linux

variables:
  - group: 'ReactAppVariables'

stages:
- stage: Build
  displayName: 'Build and Push'
  jobs:
  - job: Build
    displayName: 'Build React App'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'ACR-Connection'
        repository: 'react-app'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure-Subscription'
              appType: 'webAppContainer'
              WebAppName: 'react-app'
              DockerNamespace: '$(ACR-LoginServer)'
              DockerRepository: 'react-app'
              DockerImageTag: '$(Build.BuildId)'
              StartupCommand: 'npm start'
